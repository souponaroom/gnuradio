/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(1)                                                        */
/* BINDTOOL_HEADER_FILE(diversity_combiner_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(04ab5dd07bfe8b87ab430c230fca89a3)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/diversity_combiner_cc.h>
// pydoc.h is automatically generated in the build directory
#include <diversity_combiner_cc_pydoc.h>

void bind_diversity_combiner_cc(py::module& m)
{

    using diversity_combiner_cc = ::gr::digital::diversity_combiner_cc;


    py::class_<diversity_combiner_cc,
               gr::sync_interpolator,
               std::shared_ptr<diversity_combiner_cc>>(
        m, "diversity_combiner_cc", D(diversity_combiner_cc))

        .def(py::init(&diversity_combiner_cc::make),
             py::arg("num_inputs"),
             py::arg("vlen"),
             py::arg("combining_technique"),
             py::arg("csi_tag_key") = "csi",
             D(diversity_combiner_cc, make))


        .def("set_combining_technique",
             &diversity_combiner_cc::set_combining_technique,
             py::arg("combining_technique"),
             D(diversity_combiner_cc, set_combining_technique))

        ;
}
